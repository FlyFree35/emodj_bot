import os
from telegram import Update, ReplyKeyboardMarkup, KeyboardButton
from telegram.ext import (
    ApplicationBuilder,
    CommandHandler,
    MessageHandler,
    ContextTypes,
    filters
)

# –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞ –∏ –ø–æ—Ä—Ç–∞ –æ—Ç Render
TOKEN = os.getenv("BOT_TOKEN")
PORT = int(os.environ.get("PORT", 8443))
WEBHOOK_URL = "https://emodj-bot-1.onrender.com"  # –¢–≤–æ–π –∞–¥—Ä–µ—Å

# –ú—É–∑—ã–∫–∞ –ø–æ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—é
MOOD_MUSIC = {
    "–ì—Ä—É—Å—Ç–Ω–æ üò¢": [
        "https://youtu.be/Ho32Oh6b4jc",
        "https://youtu.be/K4DyBUG242c"
    ],
    "–í–µ—Å–µ–ª–æ üòä": [
        "https://youtu.be/ZbZSe6N_BXs",
        "https://youtu.be/3JZ4pnNtyxQ"
    ],
    "–°–ø–æ–∫–æ–π–Ω–æ üòå": [
        "https://youtu.be/1ZYbU82GVz4",
        "https://youtu.be/d-diB65scQU"
    ],
    "–≠–Ω–µ—Ä–≥–∏—á–Ω–æ üí™": [
        "https://youtu.be/fLexgOxsZu0",
        "https://youtu.be/hT_nvWreIhg"
    ],
    "–†–æ–º–∞–Ω—Ç–∏—á–Ω–æ ‚ù§Ô∏è": [
        "https://youtu.be/450p7goxZqg",
        "https://youtu.be/mWRsgZuwf_8"
    ],
    "–ú–æ—Ç–∏–≤–∏—Ä—É—é—â–µ üî•": [
        "https://youtu.be/2vjPBrBU-TM",
        "https://youtu.be/dQw4w9WgXcQ"
    ]
}

# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–π
def get_mood_keyboard():
    keyboard = [[KeyboardButton(mood)] for mood in MOOD_MUSIC.keys()]
    return ReplyKeyboardMarkup(keyboard, resize_keyboard=True)

# /start
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        "üéµ –ü—Ä–∏–≤–µ—Ç! –Ø –º—É–∑—ã–∫–∞–ª—å–Ω—ã–π –±–æ—Ç –ø–æ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—é.\n\n"
        "–í—ã–±–µ—Ä–∏, –∫–∞–∫ —Ç—ã —Å–µ–±—è —á—É–≤—Å—Ç–≤—É–µ—à—å, –∏ —è –ø–æ–¥–±–µ—Ä—É —Ç–µ–±–µ —Ç—Ä–µ–∫.",
        reply_markup=get_mood_keyboard()
    )

# /help
async def help_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        "‚ÑπÔ∏è –ö–æ–º–∞–Ω–¥—ã:\n"
        "/start ‚Äî –ø–æ–∫–∞–∑–∞—Ç—å –º–µ–Ω—é\n"
        "/help ‚Äî –ø–æ–º–æ—â—å\n"
        "/about ‚Äî –æ –±–æ—Ç–µ"
    )

# /about
async def about(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        "üéß –Ø ‚Äî –±–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–¥–±–∏—Ä–∞–µ—Ç –º—É–∑—ã–∫—É –ø–æ —Ç–≤–æ–µ–º—É –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—é.\n"
        "–ü—Ä–æ—Å—Ç–æ –≤—ã–±–µ—Ä–∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ –∏–∑ –º–µ–Ω—é, –∏ –Ω–∞—Å–ª–∞–∂–¥–∞–π—Å—è —Ç—Ä–µ–∫–æ–º!"
    )

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—è
async def mood_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    mood = update.message.text
    tracks = MOOD_MUSIC.get(mood)
    if tracks:
        for link in tracks:
            await update.message.reply_text(link)
    else:
        await update.message.reply_text("‚ùå –Ø –Ω–µ –ø–æ–Ω—è–ª –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏ –∏–∑ –º–µ–Ω—é –Ω–∏–∂–µ.")

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞
app = ApplicationBuilder().token(TOKEN).build()
app.add_handler(CommandHandler("start", start))
app.add_handler(CommandHandler("help", help_command))
app.add_handler(CommandHandler("about", about))
app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, mood_handler))

# –ó–∞–ø—É—Å–∫ –Ω–∞ Render
app.run_webhook(
    listen="0.0.0.0",
    port=PORT,
    webhook_url=WEBHOOK_URL
)
